@model BlipCo.Models.User

@{
    ViewBag.Title = "Multiple Submit Buttons Demo";
}

<h2>Multiple Submit Buttons Demo</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enter a user name and push some buttons!</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TermsStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TermsStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TermsAcceptedOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TermsAcceptedOn, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <h3>Multiple buttons with the same name</h3>
        <p>
            The buttons below use the default HttpPost controller action for this page.
        </p>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="answer" value="Accept" class="btn btn-success" />
                <input type="submit" name="answer" value="Decline" class="btn btn-danger" />
                <input type="submit" name="answer" value="Defer" class="btn btn-warning" />
            </div>
        </div>

        <h3>Multiple buttons using HTML5 properties and custom controller actions</h3>
        <p>
            The buttons below take advantage of the HTML5 formaction and formmethod attributes of the input tag to call
            custom controller actions.
        </p>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="response" value="Accept" formaction=@Url.Action("TermsAccept") formmethod="post" class="btn btn-primary" />
                <input type="submit" name="response" value="Decline" formaction=@Url.Action("TermsDecline") formmethod="post" class="btn btn-default" />
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
